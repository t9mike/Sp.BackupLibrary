<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAHCAAAAEAGAAoCwAAFgAAACgAAAAcAAAAQAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACIzHNMv3VTwHNTwHNTwHNTwHNTwHNTwHNTwHNTwHNTwHNTwHNTwHNTwHNTwHNTwHNTwHNTwHNTwHNT
        wHNTwHNTwHNTwHNTwHNTwHNTwHNPwHdyxGJtx3YAyv8Gyf8Gyf8Gyf8Gyv8GzP8GzP8GzP8GzP8GzP8G
        zP8GzP8GzP8GzP8GzP8GzP8GzP8GzP8GzP8GzP8Gy/8Gyf8Gyf8Gyf8Gyf8Ayv9OwHhxx3QDyf8Oyf8O
        yf8Oyf8Oyf8MxP4Jv/8Jv/8Jv/8Jv/8JwP8Kw/8Mxv8Lxv8Kwv8Jv/8Jv/8Jv/8Jv/8JwP8NyP0Oyv8O
        yf8Oyf8Oyf8Gyf9SwXRxx3QDyf8Oyf8Oyf8Ozf8Krd8NAAArUgAnSAAoSwAtVAAtTwAeJgAPAgAQAwAg
        LAAuUgAsVAAoSgAnSQAqSQAADBgP2v8Oyf8Oyf8Oyf8Gyf9SwXRxx3QDyf8Oyf8Oyf8Oyf8O2v8ASWtO
        qxFXyyZMqBcdNgAJTj4OjXQVuZQVt5MNhm8KTTogOgBRtBtb1CciPAAJwP8OzP8Oyf8Oyf8Oyf8Gyf9S
        wXRxx3QDyf8Oyf8Oyf8Oyf8Oyv8M1v8SLQosVQADT0sb9MUe+MQe8b0d7bod7boe8b4e+cUa678DQz8o
        SwAAYo8O2P8Oyf8Oyf8Oyf8Oyf8Gyf9SwXRxx3QDyf8Oyf8Oyf8Oyf8Oyf8O5f8AJkEGdl0g/80d57Yd
        5rUd5rUd5rUd5rUd5rUd5rUd6Lcf/9YLHRwAVnMO3/8Oyf8Oyf8Oyf8Oyf8Gyf9SwXRxx3QDyf8Oyf8O
        yf8Oyf8O2/8AQFioxssqMDQY87wd57Yd5rUd5rUd5rUd5rUd5rUd5rUe9L8AdVSZs8KImZsAXn4O1/8O
        yf8Oyf8Oyf8Gyf9SwXRxx3QDyf8Oyf8Oyf8Ozv8Amslma2rB+v+w2OYAQS4e+8Ud5rUd5rUd5rUd5rUd
        5rUd6LcV57M0MjrD+//D+/9KSUcBs+YOzP8Oyf8Oyf8Gyf9SwXRxx3QDyf8Oyf8Oyf8L3v8MHSLH/v+w
        5O+99P9bXWoKu44d7Lod5rUd5rUd5rUd5rUe/scALh655vSx5vGx5fDC8/0AKTUM2v8Oyf8Oyf8Gyf9S
        wXRxx3QDyf8Oyf8Ozv8Al8N0gYK47/qw5O+w5O/G+/8JGRYc/8cd5rUd5rUd5rUe7rsFpXtsdIG68f2w
        5O+w5O+78v5dX14CteoOzP8Oyf8Gyf9SwXRxx3QDyf8Oyf8O1v8AOE3A7/ix5fCw5O+w5O+16/aYs8EA
        akse9cEd5rUd5rUb+sMVHx/H//+w5O+w5O+w5O+y5/Ku1d0AUGsO1P8Oyf8Gyf9SwXRxx3QDyf8Oyf8K
        1/8iOkHB9v+w5O+w5O+w5O+w5O/C+v83NT0T4a0d6bcf98MAVDqlxtWz6fSw5O+w5O+w5O+w5O/F+P8L
        N0QM1v8Oyf8Gyf9SwXRxx3QDyf8Oyf8G1P9FRUS89P+w5O+w5O+w5O+w5O+x5vG96/kALB4f/8sQ1aNJ
        RlG/9/+w5O+w5O+w5O+w5O+w5O++9P8xQUUI1v8Oyf8Gyf9SwXRxx3QDyf8Oy/8CuO5haWm68fyw5O+w
        5O+w5O+w5O+w5O+58Px2gI4DroICKyHC9f+w5fCw5O+w5O+w5O+w5O+w5O+89P9IR0YG1f8Oyf8Gyf9S
        wXRxx3QDyf8Oy/8Cue5gaGi68fyw5O+w5O+w5O+w5O+w5O+w5O/J//8XHxyKrLa37vmw5O+w5O+w5O+w
        5O+w5O+w5O+89P9HR0YG1f8Oyf8Gyf9SwXRxx3QDyf8Oyf8F0P9QUVC78v6w5O+w5O+w5O+w5O+w5O+4
        7/uw5eQQEidVcGXI//+x5fCw5O+w5O+w5O+w5O+w5O++9P85RUgH1f8Oyf8Gyf9SwXRxx3QDyf8Oyf8J
        1v8rQkm/9f+w5O+w5O+w5O+w5O+/+P+Pu60AACYjGP8NAbQiLSHC/P+06vWw5O+w5O+w5O+w5O/D9/8U
        OkUL1v8Oyf8Gyf9SwXRxx3QDyf8Oyf8N1/8AMEDF9/+w5O+w5O+w5O/H//9igWkAAGEmHf8kHO4lHfcb
        EOgDAxGp3dm58Pyw5O+w5O+x5vG55e4APlUO1f8Oyf8Gyf9SwXRxx3QDyf8Oyf8O0P8AfaSKoKO27Pez
        6PPF//8wQC4JAKYmHv8kHO0kHO0kHO0kHPEkGf8AAC2KtabA+f+w5O+57/tvenoAoM8Ozv8Oyf8Gyf9S
        wXRxx3QDyf8Oyf8Oyf8J2/8gJCXN//+06+kNEBcYDN0lHfkkHO0kHO0kHO0kHO0kHO0kHO0nHf8AAGha
        d2LH///I/v8LIigL3P8Oyf8Oyf8Gyf9SwXRxx3QDyf8Oyf8Oyf8O0f8AgKhpeXIDAD4jF/8nHv8kHO0k
        HO0kHO0kHO0kHO0kHO0kHO0lHfUpH/8OAL43R0pue3oAlsMOz/8Oyf8Oyf8Gyf9SwXRxx3QDyf8Oyf8O
        yf8Oz/8Ln8kAAAAPBmgLBk0JBT0lHfgkHO0kHO0kHO0kHO0kHO0lHfUZEqQJAz8NCFgEADkAAAAP5P8O
        yf8Oyf8Oyf8Gyf9SwXRxx3QDyf8Oyf8Oyf8Oyf8O0P8P4/8DIywtjP8QRGskFu8kHO4kHO0kHO0kHO0k
        HO0mHfsNAFcql/8nd/UDMzwP5/8Oyf8Oyf8Oyf8Oyf8Gyf9SwXRxx3QDyf8Oyf8Oyf8Oyf8Oyf8Oy/8O
        2/8CMDsGEBgpF/8mHfokHPIkHO4kHO4kHPMoH/8SBHIWO4ABOkEP4P8Oyf8Oyf8Oyf8Oyf8Oyf8Gyf9S
        wXRxx3QDyf8Oyf8Oyf8Oyf8Oyf8Oyf8Oyv8P5v8DSlYDHDQVAG8gBsEnD/MnD/EfBLoUAG0AAAMIlrUP
        3v8Oyf8Oyf8Oyf8Oyf8Oyf8Oyf8Gyf9SwXRxx3QDyf8Oyf8Oyf8Oyf8Oyf8Oyf8Oyf8O1v8HRV0A//8A
        3doAmYwAbVoAcl8AnZAA9vUAdnQOxv8Oyv8Oyf8Oyf8Oyf8Oyf8Oyf8Oyf8Gyf9SwXRxx3QDyf8Oyf8O
        yf8Oyf8Oyf8Oyf8Oyf8O1v8HQ1sA/v8A//8A//8A//8A//8A//8A//8AaWoOwfgOyv8Oyf8Oyf8Oyf8O
        yf8Oyf8Oyf8Gyf9SwXRxx3QDyf8Oyf8Oyf8Oyf8Oyf8Oyf8Oyf8O1v8GQVcAtbkAtbsAtLsAtLsAtLsA
        tLsAwMYAPTgOw/oOyv8Oyf8Oyf8Oyf8Oyf8Oyf8Oyf8Gyf9SwXRxx3QDyf8Oyf8Oyf8Oyf8Oyf8Oyf8O
        yf8OzP8MsN8JeZ4KfKIKfKIKfKIKfKIKfKIKfKIJgaYOzv8Oyf8Oyf8Oyf8Oyf8Oyf8Oyf8Oyf8Gyf9S
        wXRrxnQAyf8Cyf8Cyf8Cyf8Cyf8Cyf8Cyf8Cyf8DzP8D0f8D0f8D0f8D0f8D0f8D0f8D0f8D0P8Cyf8C
        yf8Cyf8Cyf8Cyf8Cyf8Cyf8Cyf8Ayv9Mv3aa04RsxnNxx3Nxx3Nxx3Nxx3Nxx3Nxx3Nxx3Nxx3Nxx3Nx
        x3Nxx3Nxx3Nxx3Nxx3Nxx3Nxx3Nxx3Nxx3Nxx3Nxx3Nxx3Nxx3Nxx3Nxx3Nux3WIzHMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>